<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:mock="http://www.mulesoft.org/schema/mule/mock" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:spring="http://www.springframework.org/schema/beans" xmlns:core="http://www.mulesoft.org/schema/mule/core" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/mock http://www.mulesoft.org/schema/mule/mock/current/mule-mock.xsd">
    <munit:config name="munit" doc:name="MUnit configuration"/>
    <spring:beans>
        <spring:import resource="classpath:temperature.xml"/>
    </spring:beans>
    <munit:test name="temperature-test-suite-temperatureFlowTest" description="Test">
		<mock:when messageProcessor=".*:.*" doc:name="Mock">
			<mock:with-attributes>
				<mock:with-attribute name="doc:name" whereValue="#['Web Service Consumer']"/>
			</mock:with-attributes>
			<mock:then-return payload="#[getResource('sample_data/CelsiusToFahrenheitResponse.xml')]" mimeType="application/xml"/>
		</mock:when>
		<munit:set payload="#[]" doc:name="Set Message">
			<munit:inbound-properties>
				<munit:inbound-property key="http.query.params" value="#[{'temp': '30'}]"/>
			</munit:inbound-properties>
		</munit:set>
        <flow-ref name="temperatureFlow" doc:name="Flow-ref to temperatureFlow"/>
		<munit:assert-payload-equals message="you received #[payload] but required #[getResource('sample_data/CelsiusToFahrenheitResponse.xml')]" expectedValue="#[getResource('sample_data/CelsiusToFahrenheitResponse.xml')]" doc:name="Assert Payload"/>
    </munit:test>
</mule>
